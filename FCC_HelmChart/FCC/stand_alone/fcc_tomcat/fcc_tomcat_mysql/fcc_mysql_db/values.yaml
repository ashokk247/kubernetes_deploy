# Default values for fcc_mysql_db.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

fccmysqldb_deployment:
  name: {{ FCC_DB_NAME }}
  namespace: fcc-poc
  labels:
    app: fcctomcat
    io_service: {{ FCC_APPNAME }}

fccsqldb_replicaset:
  strategytype: RollingUpdate

fccmysqldb_pod:
  name: {{ FCC_DB_CONTAINERNAME }}
  hostname: {{ FCC_DB_HOSTNAME }}
  env:
    name1: MYSQL_ROOT_PASSWORD
    value1: "test_pass"
    name2: MYSQL_DATABASE
    value2: "synergie"
  args:
    lower_case_table_names: 1
  volumeMounts:
    mysql_config:
      name: fcc-mysql-config
      mountPath: /var/lib/mysql

    mysql_dbscript:
      name: fcc-mysql-dbscript
      mountPath: /docker-entrypoint-initdb.d
      azureshare: fcc-tomcat-mysql/docker-entrypoint-initdbd
      afs_secret: fcc-afs-aks-secret 
  
fccmysqldb_service:
  name: {{ FCC_DB_SERVICENAME }}
  type: ClusterIP
  port: 3306
  containerPort: 3306
  targetport: 3306
  portname: {{ FCC_DB_PORTNAME }}
image:
  repository: p21d19501542001.azurecr.io/mysql
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: fcc-acr-secret
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
