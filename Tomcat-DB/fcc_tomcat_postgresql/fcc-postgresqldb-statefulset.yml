apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fccpostgresqldb
  namespace: "fcc-poc"
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.2.0
    app.kubernetes.io/instance: superset
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  # annotations:
spec:
  serviceName: fccpostgresqldbsvc
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: superset
      role: primary
  template:
    metadata:
      name: superset-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.2.0
        app.kubernetes.io/instance: superset
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:      
      # affinity:
        # podAffinity:
          
        # podAntiAffinity:
        #   preferredDuringSchedulingIgnoredDuringExecution:
        #     - podAffinityTerm:
        #         labelSelector:
        #           matchLabels:
        #             app.kubernetes.io/name: postgresql
        #             app.kubernetes.io/instance: superset
        #             app.kubernetes.io/component: primary
        #         namespaces:
        #           - fcc-poc
        #         topologyKey: kubernetes.io/hostname
        #       weight: 1
        # nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: init-chmod-data
          image: docker.io/bitnami/minideb:buster
          imagePullPolicy: "Always"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          command:
            - /bin/sh
            - -cx
            - |
              chown 1001:1001 /bitnami/postgresql
              mkdir -p /bitnami/postgresql/data
              chmod 700 /bitnami/postgresql/data
              find /bitnami/postgresql -mindepth 1 -maxdepth 1 -not -name "conf" -not -name ".snapshot" -not -name "lost+found" | \
                xargs chown -R 1001:1001
              chmod -R 777 /dev/shm
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: fcc-postgresqldb-config
              mountPath: /bitnami/postgresql
              # subPath: 
            - name: dshm
              mountPath: /dev/shm
      containers:
        - name: superset-postgresql
          image: p21d19501542001.azurecr.io/postgresql:13
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_POSTGRES_PASSWORD
              value: "test"
              # valueFrom:
              #   secretKeyRef:
              #     name: superset-postgresql
              #     key: postgresql-postgres-password
            - name: POSTGRES_USER
              value: "superset"
            - name: POSTGRES_PASSWORD
              value: "test"
              # valueFrom:
              #   secretKeyRef:
              #     name: superset-postgresql
              #     key: postgresql-password
            - name: POSTGRES_DB
              value: "superset"
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "superset" -d "dbname=superset" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "superset" -d "dbname=superset" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: fcc-postgresqldb-config
              mountPath: /bitnami/postgresql
              # subPath: 
      imagePullSecrets: 
      - name: fcc-acr-secret
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: fcc-postgresqldb-config
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "2Gi"
        storageClassName: azurefile-wait-for-consumer